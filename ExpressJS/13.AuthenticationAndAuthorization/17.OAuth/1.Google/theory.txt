//......................................Google OAuth..................................................

//Step 1 - add google icon on login.ejs page

//step 2 - go to website 'console.cloud.google.com'
//       - go to 'my first project' section in navbar and click on 'new project'(give project name and click on create)
//       - we will receive a notification of our project in notification bell icon (select that project)
//       - click on 'API and services' option in quick access section (overview section)
//       - then click on 'OAuth consent screen' in left sidebar and then click on 'get started'
//       - give 'app name' and 'email id' and click on next (rajankit823511@gmail.com)
//       - in audience select 'external' and click on next
//       - in contact info give 'email' and click on next
//       - in finish mark a 'tick' and continue and then click on create (overview section completed)

//       - now go to 'clients' in left side bar
//       - click on 'create client' above option (client id is a unique identifier issued by google when you register your app on google cloud console)
//       - (theory - client id tells google that i am a legit app and i want to request access of user info(like name, email) with user permission)
//       - give 'application type' as 'web application', 'name' as 'project name'
//       - give in 'authorize javascript origin' as 'http://localhost:3001'
//       - give in 'authorize redirect uri' as 'http://localhost:3001/google/callback' ('/google/callback' will be route - where callback will send user info from google)
//       - click on create (then download OAuth client information by clicking on download json) -- stored in NodeJS hosting folder
//       - add variable GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET with corresponding value from OAuth client information

//step 3 - create schema 'OAuthAccountsTable' (drizzle -> schema.js)

//Step 4 - give link '/google' for google icon on login page
//       - first install arctic in our project via 'npm i arctic'
//       - create a route '/google' with get method (auth.route.js)
//       - go to 'arctic v3 documentation website'
//       - click on 'OAuth 2.0 with PKCE' in left sidebar and read documentation
//       - implement in '/google' with get method upto send cookie

//Step 5 - create a file google.js oauth folder inside lib folder(lib -> oauth -> google.js) 
//       - check usage in google.js
//       - after defining google.js, in '/google' route get method redirect to google provided url

//Step 6 - create a route '/google/callback' with get method (auth.route.js)
//       - take code and state from req.query
//       - get cookies from req.cookies
//       - validate google provided code and token code for similarity and after that get token
//       - decode token and get user details
//       - after that follow three condition mentioned in '/google/callback' with get method
//       - authenticate user with hybrid approach and redirect to login
//       - At last go to usersTable schema and remove property of password 'notNull' -
//           because if any user directly enters through OAuth then google will not provide password -
//           so in users table we have to keep that value null
//       - add a condition in manual login "/login", if a user try to login with password but previously logged in with OAuth
